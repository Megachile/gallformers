generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["transactionApi"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model migration {
  id   Int    @id @default(autoincrement())
  name String
  up   String
  down String
}

model location {
  id           Int            @id @default(autoincrement())
  location     String        @unique
  description  String?
  galllocation galllocation[]
}

model texture {
  id          Int           @id @default(autoincrement())
  texture     String       @unique
  description String?
  galltexture galltexture[]
}

model color {
  id    Int     @id @default(autoincrement())
  color String @unique
  gall  gall[]
}

model walls {
  id          Int     @id @default(autoincrement())
  walls       String @unique
  description String?
  gall        gall[]
}

model cells {
  id          Int     @id @default(autoincrement())
  cells       String @unique 
  description String?
  gall        gall[]
}

model alignment {
  id          Int     @id @default(autoincrement())
  alignment   String @unique
  description String?
  gall        gall[]
}

model shape {
  id          Int     @id @default(autoincrement())
  shape       String @unique
  description String?
  gall        gall[]
}

model abundance {
  id          Int       @id @default(autoincrement())
  abundance   String   @unique
  description String
  reference   String?
  species     species[]
}

model taxontype {
  taxoncode   String    @id
  description String    @unique
  species     species[]
  gall        gall[]
}

model family {
  id          Int       @id @default(autoincrement())
  name        String   @unique
  description String
  species     species[]
}

model species {
  id                                 Int             @id @default(autoincrement())
  taxoncode                          String?
  name                               String          @unique
  synonyms                           String?
  commonnames                        String?
  genus                              String
  family_id                          Int
  description                        String?
  abundance_id                       Int?
  abundance                          abundance?      @relation(fields: [abundance_id], references: [id])
  family                             family          @relation(fields: [family_id], references: [id])
  taxontype                          taxontype?      @relation(fields: [taxoncode], references: [taxoncode])
  gall                               gall[]
  hosts host[]                       @relation("host_gall_species_idTospecies")
  host_galls host[]                  @relation("host_host_species_idTospecies")
  speciessource                      speciessource[]
}

model gall {
  id           Int            @id @default(autoincrement())
  species_id   Int            @unique
  taxoncode    String
  detachable   Int?
  alignment_id Int?
  walls_id     Int?
  cells_id     Int?
  color_id     Int?
  shape_id     Int?
  alignment    alignment?     @relation(fields: [alignment_id], references: [id])
  cells        cells?         @relation(fields: [cells_id], references: [id])
  color        color?         @relation(fields: [color_id], references: [id])
  shape        shape?         @relation(fields: [shape_id], references: [id])
  species      species        @relation(fields: [species_id], references: [id])
  taxontype    taxontype      @relation(fields: [taxoncode], references: [taxoncode])
  walls        walls?         @relation(fields: [walls_id], references: [id])
  galllocation galllocation[]
  galltexture  galltexture[]
}

model galllocation {
  id          Int       @id @default(autoincrement())
  gall_id     Int
  location_id Int
  gall        gall     @relation(fields: [gall_id], references: [id])
  location    location @relation(fields: [location_id], references: [id])
}

model galltexture {
  id         Int      @id @default(autoincrement())
  gall_id    Int
  texture_id Int
  gall       gall    @relation(fields: [gall_id], references: [id])
  texture    texture @relation(fields: [texture_id], references: [id])
}

model host {
  id                 Int      @id @default(autoincrement())
  host_species_id    Int
  gall_species_id    Int
  gallspecies        species @relation("host_gall_species_idTospecies", fields: [gall_species_id], references: [id])
  hostspecies        species @relation("host_host_species_idTospecies", fields: [host_species_id], references: [id])
}

model source {
  id            Int             @id @default(autoincrement())
  title         String          @unique
  author        String
  pubyear       String
  link          String
  citation      String
  speciessource speciessource[]
}

model speciessource {
  id         Int      @id @default(autoincrement())
  species_id Int
  source_id  Int
  source     source  @relation(fields: [source_id], references: [id])
  species    species @relation(fields: [species_id], references: [id])
  // added in 003-gallformers.sql migration
  description String?
  // added in 004-gallformers.sql migration
  useasdefault Int @default(0)
}

// Added in 003-gallformers.sql migration
model glossary {
  id          Int @id @default(autoincrement())
  word        String @unique
  definition  String
  urls        String
}