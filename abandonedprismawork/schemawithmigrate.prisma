generator client {
  provider = "prisma-client-js"
  previewFeatures = ["connectOrCreate"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Family {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  species     Species[]
}

model Abundance {
  id           Int       @id @default(autoincrement())
  abundance    String    @unique
  description  String
  reference    String?
  species      Species[]
}

model Source {
  id        Int          @id @default(autoincrement())
  title     String       @unique
  author    String?
  pubyear   String?
  link      String?
  citation  String?
  species   Species[]
}

model Species {
  id               Int        @id @default(autoincrement())
  name             String     @unique
  synonyms         String?
  commonnames      String?
  genus            String
  family           Family
  description      String?
  abundanceId      Int?
  abundance        Abundance? @relation(fields: [abundanceId], references: [id])
  gall             Gall?
  host             Host?
  sources          Source[]
}

model Gall {
  id          Int       @id @default(autoincrement())
  speciesId   Int
  species     Species   @relation(fields: [speciesId], references: [id])
  hosts       Host[]
  detachable  Int?
  locations   Location[]
  textures    Texture[]
  shape       Shape?
  colorId     Int?
  color       Color?    @relation(fields: [colorId], references: [id])
  wallsId     Int?
  walls       Walls?    @relation(fields: [wallsId], references: [id])
  cellsId     Int?
  cells       Cells?    @relation(fields: [cellsId], references: [id])
  alignmentId Int?
  alignment   Alignment? @relation(fields: [alignmentId], references: [id])
 }

model Host {
  id          Int       @id @default(autoincrement())
  speciesId   Int
  species     Species   @relation(fields: [speciesId], references: [id])
  galls       Gall[]
}

model Location {
  id          Int     @id @default(autoincrement())
  loc         String  @unique
  description String
  gall        Gall[]
}

model Texture {
  id          Int     @id @default(autoincrement())
  texture     String  @unique
  description String
  gall        Gall[]
}

model Color {
  id       Int     @id @default(autoincrement())
  color    String  @unique
  gall        Gall[]
}

model Walls {
  id          Int     @id @default(autoincrement())
  walls       String  @unique
  description String
  gall        Gall[]
}

model Cells {
  id          Int     @id @default(autoincrement())
  cells       String  @unique
  description String
  gall        Gall[]
}

model Alignment {
  id          Int     @id @default(autoincrement())
  alignment   String  @unique
  description String
  gall        Gall[]
}

model Shape {
  id          Int     @id @default(autoincrement())
  shape       String  @unique
  description String
  gall        Gall[]
}